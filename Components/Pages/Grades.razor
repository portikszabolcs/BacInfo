@page "/grades"

@using Services
@using Models
@using Microsoft.AspNetCore.Components.Sections
@inject ResultService _resultService
@rendermode InteractiveServer

<PageTitle>Grades</PageTitle>
<SectionContent SectionName="Title"> Grades </SectionContent>

<div class="grid text-center">
    <div class="row">
        <div class="col p-3">
            <PieChart @ref="gradeDistributionChart" />
        </div>
        <div class="col p-3">
            <PieChart @ref="resultDistributionChart" />
        </div>
    </div>
</div>


@code {
    private PieChart gradeDistributionChart = default!;
    private PieChartOptions gradeDistributionOptions = default!;
    private ChartData gradeDistributionChartData = default!;

    private PieChart resultDistributionChart = default!;
    private PieChartOptions resultDistributionOptions = default!;
    private ChartData resultDistributionChartData = default!;

    protected override void OnInitialized()
    {
        InitGradeDistribution();
        InitResultDistribution();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await gradeDistributionChart.InitializeAsync(gradeDistributionChartData, gradeDistributionOptions);
            await resultDistributionChart.InitializeAsync(resultDistributionChartData, resultDistributionOptions);
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private void InitGradeDistribution()
    {
        Dictionary<string, double?> distribution = _resultService.GetGradesDistribution().Result;
        distribution["<5"] = distribution["0"];
        distribution.Remove("0");

        var dataset = new PieChartDataset()
            {
                Data = distribution.Values.ToList<double?>(),
            };
        gradeDistributionChartData = new ChartData { Labels = distribution.Keys.ToList(), Datasets = [dataset] };

        gradeDistributionOptions = new();
        gradeDistributionOptions.Responsive = true;
        gradeDistributionOptions.Plugins.Title!.Text = "Distribution of averages";
        gradeDistributionOptions.Plugins.Title.Display = true;
    }

    private void InitResultDistribution()
    {
        Dictionary<string, double?> passrate = _resultService.GetPassRate().Result;

        var dataset = new PieChartDataset()
            {
                Data = passrate.Values.ToList<double?>(),
            };
        resultDistributionChartData = new ChartData { Labels = passrate.Keys.ToList(), Datasets = [dataset] };

        resultDistributionOptions = new();
        resultDistributionOptions.Responsive = true;
        resultDistributionOptions.Plugins.Title!.Text = "Pass/fail rate";
        resultDistributionOptions.Plugins.Title.Display = true;
    }
}
